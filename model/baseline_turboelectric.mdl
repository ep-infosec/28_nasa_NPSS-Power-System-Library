/***
 -------------------------------------------------------------------------------
 |                                                                             |
 | NASA Glenn Research Center                                                  |
 | 21000 Brookpark Rd 		                                                     |
 | Cleveland, OH 44135 	                                                       |
 |                                                                             |
 | File Name:     baseline_turboelectric.mdl                                   |
 | Author(s):	    Jeffrey Csank, David Sadey, Tom Lavelle       			         |
 | Date(s):       March 2019                                                   |
 |                                                                             |
 | Description:   Baseline model (generator, cable, inverter, motor) using     |
 |                the elctric port.                                            |
 |                                                                             |
 -------------------------------------------------------------------------------
***/

cout<<"======================================="<<endl;
cout<<" Example Turbo-electric Model "<<endl;
cout<<"======================================="<<endl;

setThermoPackage("GasTbl");

/**************************
Electric Power System Components
**************************/
Element Generator Gen1 {
  #include <STARCABLmotorGenerator.map>
  Vbus_LL=1000;	
  effDes=0.96;
  SpecificPower=13.;
  frequency=400; // Hz
}

Element Breaker Breaker1 {
  effDes=0.995;
  SpecificPower=250.0; 
}

Element Enode E1{
  ElectricInputPort EP_I;
  ElectricOutputPort EP_O;
  frequency = 400.;
}

Element AeroCable Cable1 {
  length=28.3464;
}

Element Rectifier Rect1 {
  #include <modelInverterRectifier.map>
  effDes = .95;
  pwrDes = 4000.;
  frequency = 400.;
    S_map.pwrMapDes = 0.5;
}

Element Breaker Breaker2 {
  effDes=0.995;
  SpecificPower=250.0; 
}

Element Enode E2{
  ElectricInputPort EP_I;
  ElectricOutputPort EP_O;
}

Element AeroCable Cable2 {
  length=28.3464;
}

Element Inverter Inv1 {
  #include <modelInverterRectifier.map>
  effDes = .95;
  pwrDes = 4000.;
  frequency=400;
    S_map.pwrMapDes = 0.5;
}


Element Breaker Breaker3 {
  effDes=0.995;
  SpecificPower=250.0; 
}

Element Enode E3{
  ElectricInputPort EP_I;
  ElectricOutputPort EP_O;
  frequency = 400.;
}

Element AeroCable Cable3 {
  length=28.3464;
}

Element Motor EM1 {
   #include <STARCABLmotorGenerator.map>
   effDes=0.96;
   powerfactor=1.0;
   SpecificPower=13.0; 
   trqDes=3500.0; 
   frequency = 400.;
   //Vreal = 1000.;
}


/**************************
 Electric Motor Connections
**************************/
Element FlowStart Atm{
  Pt=14.696;
  Tt=518.67;
  W=4394.74/20;
}

/*Element Compressor Prop{
  #include "fanE3.map";
  PRdes=1.4;
  effDes=0.93;	
}*/

Element Propeller Prop{
  CT = 1.;
  UtipDes = 150;
  pwrLoadDes = 5.;
  pwr = 3000.;
}

Element FlowEnd dump{
};


Element Shaft Propulsor_Shaft {
  Nmech=4000;   // rpm
  ShaftInputPort Sh1_I, Sh_Prop;
}

/**************************
 Turbine Engine / Generator  Connections
**************************/
Element FlowStart TurbineAtm{
  Pt=500;
  Tt=2200;
  W=30;
  FAR = .02;
}

Element Turbine Turb{
  #include "lptE3.map";	
  PRbase=2;
  effDes=0.9;
  //void postexecute() {
  //	cout << PRbase << "turb.PRbase" << endl;
  //}

}

Nozzle Noz{
  PsExh = 14.;
}

Element FlowEnd Turbinedump{
};

Independent turbPR{
  varName="Turb.PRdes";
}

Element Shaft Turbine_Shaft {
  Nmech=4000;   // rpm
  ShaftInputPort Sh1_I, Sh_Turbine;	
}

//------------------------------------------------t------------------------------------------------
// Component Linkages
//-------------------------------------------------------------------------------------------------
linkPortI( "Gen1.EP_O", "Breaker1.EP_I");
linkPortI( "Breaker1.EP_O", "E1.EP_I");
linkPortI( "E1.EP_O", "Cable1.EP_I");
linkPortI( "Cable1.EP_O", "Rect1.EP_I");
linkPortI( "Rect1.EP_O",  "Breaker2.EP_I");
linkPortI( "Breaker2.EP_O", "E2.EP_I");
linkPortI( "E2.EP_O","Cable2.EP_I");
linkPortI( "Cable2.EP_O", "Inv1.EP_I");
linkPortI( "Breaker3.EP_O", "E3.EP_I");
linkPortI( "Inv1.EP_O", "Breaker3.EP_I");
linkPortI( "E3.EP_O", "Cable3.EP_I" );
linkPortI( "Cable3.EP_O", "EM1.EP_I" );
findSourcesAndPropagate();

linkPorts( "Propulsor_Shaft.Sh1_I"  , "EM1.Sh_O"          	, "Shaft_Motor1" );
linkPorts( "Atm.Fl_O"               , "Prop.Fl_I"           , "St0-St1");
linkPorts( "Prop.Fl_O"              , "Noz.Fl_I"           ,  "St1-St2");
linkPorts( "Noz.Fl_O"              ,  "dump.Fl_I"           , "St2-End");

//
linkPorts( "Prop.Sh_O"              , "Propulsor_Shaft.Sh_Prop" , "Prop-to-Shaft");
linkPorts( "TurbineAtm.Fl_O"        , "Turb.Fl_I"           , "St00-St10");
linkPorts( "Turb.Fl_O"              , "Turbinedump.Fl_I"    , "St10-End0");
linkPorts( "Turb.Sh_O"        		, "Turbine_Shaft.Sh_Turbine" , "Turb-to-Shaft");
linkPorts( "Turbine_Shaft.Sh1_I"    , "Gen1.Sh_O", "Gen1-to-Shaft");


// Remove and re-append the elements containing nodes (or that are nodes) to make them execute last.
solverSequence.remove( "Gen1" );
solverSequence.remove( "E1" );
solverSequence.remove( "Rect1" );
solverSequence.remove( "E2" );
solverSequence.remove( "Inv1" );
solverSequence.remove( "E3" );
solverSequence.remove( "EM1" );
solverSequence.remove( "Turbine_Shaft" );
solverSequence.remove( "Propulsor_Shaft" );

solverSequence.append( "Gen1" );
solverSequence.append( "E1" );
solverSequence.append( "Rect1" );
solverSequence.append( "E2" );
solverSequence.append( "Inv1" );
solverSequence.append( "E3" );
solverSequence.append( "EM1" );
solverSequence.append( "Turbine_Shaft" );
solverSequence.append( "Propulsor_Shaft" );


solver.debugLevel = "ITERATION_DETAILS";
solver.diagnosticFile = "soler.bad";


Inv1{
  Vreal = 950;  //guess value
  Vimag = 0;  //guess value		
}


Rect1{
  Vreal = 999.999999;  //guess value
  Vimag = 0;  //guess value		
}
